public class CurrencyConversion {
    public static void main(String args[]) {

       // TODO  your code here

    }
}



/*
Imagine you and your friends have decided to go on a trip to Europe. Because you live in America, US Dollars (USD) will not be a valid currency for European transactions, so you will have to convert them to Euros (EUR). 

You have the following data:

Amount in USD = 100

Exchange rate of 1 USD = 0.85 EUR

Expenditure = 55 EUR

After expenditure = 45 EUR

Your challenge is to write the missing part of the code to get the desired output.

Requirements:
Complete these steps in the interactive code block:
1. Declare and initialize two double variables as below:
    double amountInUSD = 100.0; 
    double exchangeRateUSDToEUR = 0.85;  (1 USD = 0.85 EUR)
2. Print the initial amount in USD, i.e., 100.0 USD.
3. Perform the operation:  amountInUSD *= exchangeRateUSDToEUR  
4. Print the amount in EUR after conversion, i.e., 85 EUR.
5. Deduct 55 EUR as the stated expenditure and print the balance, i.e., 30 EUR.
6. Convert the remaining 30 EUR to USD.
7. Print the amount in USD after converting it back to USD from EUR.

Tip

The computed value of double variables can sometimes result in many decimal places. For example, it could look like this: 35.294117647058826. To format the output of the decimal places to two digit decimal place, you use System.out.printf(), and %.2f .   For example:
System.out.printf(“Amount in USD is $%.2f”, value);
The output will be: Amount in USD is $35.29.
Notice that when using %.2f  you use , instead of  + to concatenate the String and double value. 
